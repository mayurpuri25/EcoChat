{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur\\\\OneDrive\\\\Desktop\\\\WEB PROJECT\\\\Major Project\\\\frontend\\\\src\\\\components\\\\BotMessages.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Message from \"./Message\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotMessages = () => {\n  _s();\n  const groupID = useSelector(state => state.groupID);\n  const [messages, setMessages] = useState([]);\n  const messagesEndRef = useRef(null);\n  const [generatedContent, setGeneratedContent] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      const API_KEY = 'AIzaSyB0dmVIWZ5raZtTD230bCO2Da-j-PW2s8o';\n      const genAI = new GoogleGenerativeAI(API_KEY);\n      const model = genAI.getGenerativeModel({\n        model: \"gemini-1.5-pro-latest\"\n      });\n      const prompt = \"Write a story about a magic backpack.\";\n      try {\n        const result = await model.generateContent(prompt);\n        const response = await result.response;\n        const text = await response.text();\n        setGeneratedContent(text);\n        console.log('RESULT:', generatedContent);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Scroll to bottom after a small delay when messages are loaded\n    const timer = setTimeout(() => {\n      if (messagesEndRef.current) {\n        messagesEndRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\"\n        });\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-messages\",\n      children: \"Start the conversation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n      message: message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BotMessages, \"fr3I4MlbsLUiHWR5IbNfprch0p8=\", false, function () {\n  return [useSelector];\n});\n_c = BotMessages;\nexport default BotMessages;\nvar _c;\n$RefreshReg$(_c, \"BotMessages\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useSelector","Message","GoogleGenerativeAI","jsxDEV","_jsxDEV","BotMessages","_s","groupID","state","messages","setMessages","messagesEndRef","generatedContent","setGeneratedContent","fetchData","API_KEY","genAI","model","getGenerativeModel","prompt","result","generateContent","response","text","console","log","error","timer","setTimeout","current","scrollIntoView","behavior","block","clearTimeout","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","ref","_c","$RefreshReg$"],"sources":["C:/Users/mayur/OneDrive/Desktop/WEB PROJECT/Major Project/frontend/src/components/BotMessages.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Message from \"./Message\";\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\n\r\n\r\nconst BotMessages = () => {\r\n  const groupID = useSelector((state) => state.groupID);\r\n  const [messages, setMessages] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const [generatedContent, setGeneratedContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const API_KEY = 'AIzaSyB0dmVIWZ5raZtTD230bCO2Da-j-PW2s8o';\r\n      const genAI = new GoogleGenerativeAI(API_KEY);\r\n      const model = genAI.getGenerativeModel({ model: \"gemini-1.5-pro-latest\" });\r\n      const prompt = \"Write a story about a magic backpack.\";\r\n\r\n      \r\n      try {\r\n          const result = await model.generateContent(prompt);\r\n          const response = await result.response;\r\n          const text = await response.text();\r\n          setGeneratedContent(text);\r\n          console.log('RESULT:', generatedContent);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    // Scroll to bottom after a small delay when messages are loaded\r\n    const timer = setTimeout(() => {\r\n      if (messagesEndRef.current) {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n      }\r\n    }, 100);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      {messages.length === 0 ? (\r\n        <div className=\"no-messages\">Start the conversation!</div>\r\n      ) : (\r\n        messages.map((message, index) => (\r\n          <Message key={index} message={message} />\r\n        ))\r\n      )}\r\n        <div ref={messagesEndRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BotMessages;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}