{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur\\\\OneDrive\\\\Desktop\\\\WEB PROJECT\\\\Major Project\\\\frontend\\\\src\\\\components\\\\Chats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { setGroupName } from '../actions';\nimport { setGroupID } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate(); // Initialize useHistory\n  const dispatch = useDispatch();\n  const handleSelect = (key, name) => {\n    navigate(`?param=${key}`); // Navigate to a dynamic route with group ID as parameter\n    dispatch(setGroupName(name));\n    dispatch(setGroupID(key));\n  };\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const sessionID = localStorage.getItem('sessionID');\n        const response = await fetch(\"http://127.0.0.1:5000/show_group\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${sessionID}`,\n            // Send session ID\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        if (data.success) {\n          setUserData(data); // Set user data\n        } else {\n          console.error(data.message); // Handle error\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchUserData();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\"\n      // onClick={() => handleSelect(group.group_ID, group.group_name)}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"pi pi-reddit\",\n        style: {\n          fontSize: '2.0rem'\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"EcoBot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), userData && userData.groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: () => handleSelect(group.group_ID, group.group_name),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"pi pi-users\",\n        style: {\n          fontSize: '2.0rem'\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: group.group_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, group.group_ID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"3BXaYVfv2tBTCd22uznt9cFmckQ=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useDispatch","setGroupName","setGroupID","jsxDEV","_jsxDEV","Chats","_s","userData","setUserData","navigate","dispatch","handleSelect","key","name","fetchUserData","sessionID","localStorage","getItem","response","fetch","method","headers","Authorization","data","json","success","console","error","message","className","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","groups","map","group","onClick","group_ID","group_name","_c","$RefreshReg$"],"sources":["C:/Users/mayur/OneDrive/Desktop/WEB PROJECT/Major Project/frontend/src/components/Chats.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\nimport { useDispatch} from 'react-redux';\r\nimport { setGroupName } from '../actions';\r\nimport { setGroupID } from '../actions';\r\n\r\n\r\n\r\nconst Chats = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const navigate = useNavigate(); // Initialize useHistory\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSelect = (key, name) => {\r\n    navigate(`?param=${key}`); // Navigate to a dynamic route with group ID as parameter\r\n    dispatch(setGroupName(name));\r\n    dispatch(setGroupID(key));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const sessionID = localStorage.getItem('sessionID');\r\n        const response = await fetch(\"http://127.0.0.1:5000/show_group\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${sessionID}`, // Send session ID\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setUserData(data); // Set user data\r\n        } else {\r\n          console.error(data.message); // Handle error\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <div\r\n          className=\"userChat\"\r\n          // onClick={() => handleSelect(group.group_ID, group.group_name)}\r\n        >\r\n          <i className=\"pi pi-reddit\" style={{ fontSize: '2.0rem' }}> </i>\r\n          <div className=\"userChatInfo\">\r\n            <span>EcoBot</span>\r\n          </div>\r\n        </div>\r\n      {userData && userData.groups.map(group => (\r\n        <div\r\n          className=\"userChat\"\r\n          key={group.group_ID}\r\n          onClick={() => handleSelect(group.group_ID, group.group_name)}\r\n        >\r\n          <i className=\"pi pi-users\" style={{ fontSize: '2.0rem' }}> </i>\r\n          <div className=\"userChatInfo\">\r\n            <span>{group.group_name}</span>\r\n            {/* <p>hello!</p> */}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}