{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur\\\\OneDrive\\\\Desktop\\\\WEB PROJECT\\\\Major Project\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const inputRef = useRef(null);\n  const [formsData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formsData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFileChange = e => {\n    // console.log(e.target.files[0]);\n\n    setFile(e.target.files[0]);\n  };\n  const handleFileDelete = () => {\n    setFile(null);\n    inputRef.current.value = null;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('username', formsData['username']);\n    formData.append('email', formsData['email']);\n    formData.append('password', formsData['password']);\n    formData.append('profile_image', file);\n    try {\n      let filename = null;\n      if (file) {\n        const formImageData = new FormData();\n        formImageData.append(\"file\", file);\n        const uploadResponse = await fetch('http://127.0.0.1:5000/upload_profile_image', {\n          method: \"POST\",\n          body: formData\n        });\n        const uploadData = await uploadResponse.json();\n        if (!uploadData.success) {\n          console.error(\"ERROR:\", uploadData.message);\n          setFile(null); // Clear file input\n          return;\n        }\n        filename = uploadData.filename;\n      }\n      // --------------------------------------------------\n      const response = await fetch('http://127.0.0.1:5000/register', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: formsData['username'],\n          email: formsData['email'],\n          password: formsData['password'],\n          image_profile: filename\n        })\n      });\n      const data = await response.json();\n      console.log(data); // Handle network error\n\n      if (response.ok) {\n        window.location.href = '/login';\n      } else {\n        console.error(data.message); // Handle registration error\n      }\n    } catch (error) {\n      console.error(error); // Handle network error\n    }\n  };\n\n  // const handleSubmit = async e => {\n  //   e.preventDefault();\n  //   try {\n  //     const formData = new FormData();\n  //     formData.append('username', formsData['username']);\n  //     formData.append('email', formsData['email']);\n  //     formData.append('password', formsData['password']);\n  //     formData.append('profile_image', file);\n  //     console.log([...formData.entries()]);\n\n  //     const response = await fetch('http://127.0.0.1:5000/register', {\n  //       method: \"POST\",\n  //       body: JSON.stringify(Object.fromEntries(formData)),\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //     });\n\n  //     if (!response.ok) {\n  //       throw new Error(`HTTP error! status: ${response.status}`);\n  //     }\n  //     const data = await response.json();\n  //     console.log(data); // Handle network error\n\n  //     if (response.ok) {\n  //       window.location.href = '/login';\n  //     } else {\n  //       console.error(data.message); // Handle registration error\n  //     }\n  //   } catch (error) {\n  //     console.error(error); // Handle network error\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"pi pi-user\",\n          style: {\n            fontSize: '1.5rem',\n            color: '#708090',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add an avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileChange,\n          ref: inputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-info\",\n        style: {\n          display: 'contents',\n          backgroundColor: '#708090'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: handleFileDelete,\n          className: \"pi pi-times-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Already Have An Account? Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"OTJ+35/ybBt477aVmeYV7ile8k4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useRef","Link","jsxDEV","_jsxDEV","Register","_s","file","setFile","inputRef","formsData","setFormData","username","email","password","handleChange","e","target","name","value","handleFileChange","files","handleFileDelete","current","handleSubmit","preventDefault","formData","FormData","append","filename","formImageData","uploadResponse","fetch","method","body","uploadData","json","success","console","error","message","response","headers","JSON","stringify","image_profile","data","log","ok","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","htmlFor","className","style","fontSize","color","cursor","id","accept","ref","display","backgroundColor","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/mayur/OneDrive/Desktop/WEB PROJECT/Major Project/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\nconst Register = () => {\r\n  const [file, setFile] = useState(null);\r\n  const inputRef = useRef(null);\r\n  const [formsData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formsData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    // console.log(e.target.files[0]);\r\n\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFileDelete = () => {\r\n    setFile(null);\r\n    inputRef.current.value = null;\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('username', formsData['username']);\r\n    formData.append('email', formsData['email']);\r\n    formData.append('password', formsData['password']);\r\n    formData.append('profile_image', file);\r\n      \r\n    try {\r\n      let filename = null;\r\n      if (file) {\r\n        const formImageData = new FormData();\r\n        formImageData.append(\"file\", file);\r\n        \r\n        const uploadResponse = await fetch('http://127.0.0.1:5000/upload_profile_image', {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n        const uploadData = await uploadResponse.json();\r\n        if (!uploadData.success) {\r\n          console.error(\"ERROR:\", uploadData.message);\r\n          setFile(null); // Clear file input\r\n          return;\r\n        }\r\n        filename = uploadData.filename;\r\n      }\r\n// --------------------------------------------------\r\n        const response = await fetch('http://127.0.0.1:5000/register', {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            username: formsData['username'],\r\n            email: formsData['email'],\r\n            password: formsData['password'],\r\n            image_profile: filename,\r\n          }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(data); // Handle network error\r\n  \r\n        if (response.ok) {\r\n          window.location.href = '/login';\r\n        } else {\r\n          console.error(data.message); // Handle registration error\r\n        }\r\n      } catch (error) {\r\n        console.error(error); // Handle network error\r\n      }\r\n  };\r\n\r\n  // const handleSubmit = async e => {\r\n  //   e.preventDefault();\r\n  //   try {\r\n  //     const formData = new FormData();\r\n  //     formData.append('username', formsData['username']);\r\n  //     formData.append('email', formsData['email']);\r\n  //     formData.append('password', formsData['password']);\r\n  //     formData.append('profile_image', file);\r\n  //     console.log([...formData.entries()]);\r\n      \r\n  //     const response = await fetch('http://127.0.0.1:5000/register', {\r\n  //       method: \"POST\",\r\n  //       body: JSON.stringify(Object.fromEntries(formData)),\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       },\r\n  //     });\r\n\r\n  //     if (!response.ok) {\r\n  //       throw new Error(`HTTP error! status: ${response.status}`);\r\n  //     }\r\n  //     const data = await response.json();\r\n  //     console.log(data); // Handle network error\r\n\r\n  //     if (response.ok) {\r\n  //       window.location.href = '/login';\r\n  //     } else {\r\n  //       console.error(data.message); // Handle registration error\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(error); // Handle network error\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} />\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} />\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} />\r\n        <label htmlFor=\"file\">\r\n          <i className=\"pi pi-user\" style={{ fontSize: '1.5rem', color: '#708090', cursor: 'pointer' }}></i>\r\n          <span>Add an avatar</span>\r\n          <input\r\n            id=\"file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleFileChange}\r\n            ref={inputRef}\r\n            style={{ display: 'none' }}\r\n          />\r\n        </label>\r\n        {file && (\r\n            <div className=\"file-info\" style={{display: 'contents', backgroundColor: '#708090'}}>\r\n              <span>{file.name}</span>\r\n              <i onClick={handleFileDelete} className=\"pi pi-times-circle\"></i>\r\n            </div>\r\n        )}\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      <Link to=\"/login\">Already Have An Account? Log In</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}