{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur\\\\OneDrive\\\\Desktop\\\\WEB PROJECT\\\\Major Project\\\\frontend\\\\src\\\\components\\\\BotMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\n// import {useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotMessage = ({\n  message\n}) => {\n  _s();\n  const ref = useRef();\n  const [loading, setLoading] = useState(true);\n  const [text, setText] = useState(\"\");\n  // const photoURL = useSelector((state) => state.currentUserImage);\n  const photoURL = localStorage.getItem(\"userImageURL\");\n  // console.log(text)\n\n  // Function to remove HTML tags\n  function removeTags(htmlString) {\n    const regex = /<[^>]*>/g; // Regular expression to match HTML tags\n    return htmlString.replace(regex, \"\");\n  }\n  function formatText(text) {\n    // Extract and format the text\n    const formattedText = removeTags(text).replace(/\\*\\s+/g, \"\") // Remove leading asterisks\n    .replace(/\\s+\\*/g, \"\") // Remove trailing asterisks\n\n    // Add bold formatting for headings\n    .replace(/\\*\\s*(.*?)\\s*\\*/g, \"**$1**\\n\\n\") // Replace asterisks with bold and double newline\n    .replace(/\\n\\n/g, \"\\n\\n\\n-----\\n\\n\") // Section break with horizontal rule\n    .replace(/\\n/g, \"\\n\\n\") // Double newline for paragraph spacing; adjust if needed\n    .replace(/([^\\n]\\n)([^\\n])/g, \"$1  $2\"); // Indent bullet points (optional)\n    console.log(formattedText);\n    return formattedText;\n  }\n  console.log('URL', photoURL);\n  useEffect(() => {\n    const scrollToBottom = () => {\n      ref.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\"\n      });\n    };\n    scrollToBottom();\n    if (message.parts && message.parts.length > 0 && message.parts[0].text) {\n      setText(message.parts[0].text);\n      setLoading(false);\n    }\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: `message ${message.role === \"user\" ? \"owner\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageInfo\",\n      children: [message.role === \"user\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"http://127.0.0.1:5000/uploads/reddit icon.jpeg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message.role === \"user\" ? \"You\" : \"EcoBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageContent\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this) : text && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatText(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(BotMessage, \"rWuMmdDVIjX79BdTzNYfe1E4E1U=\");\n_c = BotMessage;\nexport default BotMessage;\nvar _c;\n$RefreshReg$(_c, \"BotMessage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","BotMessage","message","_s","ref","loading","setLoading","text","setText","photoURL","localStorage","getItem","removeTags","htmlString","regex","replace","formatText","formattedText","console","log","scrollToBottom","current","scrollIntoView","behavior","block","parts","length","className","role","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mayur/OneDrive/Desktop/WEB PROJECT/Major Project/frontend/src/components/BotMessage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n// import {useSelector } from 'react-redux';\r\n\r\n\r\nconst BotMessage = ({ message }) => {\r\n  const ref = useRef();\r\n  const [loading, setLoading] = useState(true);\r\n  const [text, setText] = useState(\"\");\r\n  // const photoURL = useSelector((state) => state.currentUserImage);\r\n  const photoURL = localStorage.getItem(\"userImageURL\");\r\n  // console.log(text)\r\n\r\n  // Function to remove HTML tags\r\n  function removeTags(htmlString) {\r\n    const regex = /<[^>]*>/g; // Regular expression to match HTML tags\r\n    return htmlString.replace(regex, \"\");\r\n  }\r\n\r\n  function formatText(text) {\r\n    // Extract and format the text\r\n    const formattedText = removeTags(text)\r\n      .replace(/\\*\\s+/g, \"\") // Remove leading asterisks\r\n      .replace(/\\s+\\*/g, \"\") // Remove trailing asterisks\r\n\r\n      // Add bold formatting for headings\r\n      .replace(/\\*\\s*(.*?)\\s*\\*/g, \"**$1**\\n\\n\") // Replace asterisks with bold and double newline\r\n\r\n      .replace(/\\n\\n/g, \"\\n\\n\\n-----\\n\\n\") // Section break with horizontal rule\r\n      .replace(/\\n/g, \"\\n\\n\") // Double newline for paragraph spacing; adjust if needed\r\n      .replace(/([^\\n]\\n)([^\\n])/g, \"$1  $2\"); // Indent bullet points (optional)\r\n    console.log(formattedText);\r\n\r\n    return formattedText;\r\n  }\r\n\r\n  console.log('URL',photoURL);\r\n  useEffect(() => {\r\n    const scrollToBottom = () => {\r\n      ref.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n    };\r\n\r\n    scrollToBottom();\r\n\r\n    if (message.parts && message.parts.length > 0 && message.parts[0].text) {\r\n      setText(message.parts[0].text);\r\n      setLoading(false);\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={`message ${message.role === \"user\" ? \"owner\" : \"\"}`}\r\n    >\r\n      <div className=\"messageInfo\">\r\n        {message.role === \"user\" ? (\r\n          <img src={photoURL} alt=\"\" />\r\n        ) : (\r\n          <img src=\"http://127.0.0.1:5000/uploads/reddit icon.jpeg\" alt=\"\" />\r\n        )}\r\n        {/* <img src=\"http://127.0.0.1:5000/uploads/reddit icon.jpeg\" alt=\"\" /> */}\r\n        <span>{message.role === \"user\" ? \"You\" : \"EcoBot\"}</span>\r\n      </div>\r\n      <div className=\"messageContent\">\r\n        {loading ? <p>Loading...</p> : text && <p>{formatText(text)}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BotMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}