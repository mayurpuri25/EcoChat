{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur\\\\OneDrive\\\\Desktop\\\\WEB PROJECT\\\\Major Project\\\\frontend\\\\src\\\\components\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Message from \"./Message\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const groupID = useSelector(state => state.groupID);\n  const [messages, setMessages] = useState([]);\n  //   const { data } = useContext(ChatContext);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/get_messages\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            groupID: groupID\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          console.log(data); // Handle response from the backend as needed\n          setMessages(data);\n          console.log(messages);\n        } else console.error(\"ERROR:\", data.message); // Log response from the backend\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMessages();\n  }, [groupID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"SyaJqCujwEd1/sU13gxXcUiePyM=\", false, function () {\n  return [useSelector];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useEffect","useState","Message","useSelector","jsxDEV","_jsxDEV","Messages","_s","groupID","state","messages","setMessages","fetchMessages","response","fetch","method","headers","body","JSON","stringify","data","json","success","console","log","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mayur/OneDrive/Desktop/WEB PROJECT/Major Project/frontend/src/components/Messages.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Message from \"./Message\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Messages = () => {\r\n  const groupID = useSelector((state) => state.groupID);\r\n  const [messages, setMessages] = useState([]);\r\n  //   const { data } = useContext(ChatContext);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:5000/get_messages\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            groupID: groupID,\r\n          }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.success){\r\n          console.log(data); // Handle response from the backend as needed\r\n          setMessages(data);\r\n          console.log(messages);\r\n        } else\r\n          console.error(\"ERROR:\", data.message); // Log response from the backend\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [groupID]);\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      {/* {messages.map((m) => ( */}\r\n      <Message />\r\n      {/* ))} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrD,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C;;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBX,OAAO,EAAEA;UACX,CAAC;QACH,CAAC,CAAC;QACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,OAAO,EAAC;UACfC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC;UACnBT,WAAW,CAACS,IAAI,CAAC;UACjBG,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;QACvB,CAAC,MACCa,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEL,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDb,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA;IAAKsB,SAAS,EAAC,UAAU;IAAAC,QAAA,eAEvBvB,OAAA,CAACH,OAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEV,CAAC;AAACzB,EAAA,CAvCID,QAAQ;EAAA,QACIH,WAAW;AAAA;AAAA8B,EAAA,GADvB3B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}