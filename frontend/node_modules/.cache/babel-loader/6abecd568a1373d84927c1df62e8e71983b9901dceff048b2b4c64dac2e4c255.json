{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur\\\\OneDrive\\\\Desktop\\\\WEB PROJECT\\\\Major Project\\\\frontend\\\\src\\\\components\\\\BotInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const inputRef = useRef(null);\n  const groupID = useSelector(state => state.groupID);\n  function formatDate(timestamp) {\n    const date = new Date(timestamp);\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const seconds = date.getSeconds().toString().padStart(2, '0');\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n  }\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileDelete = () => {\n    setFile(null);\n    inputRef.current.value = null;\n  };\n  const handleSend = async () => {\n    const timestamp = formatDate(new Date().toLocaleString('en-US', {\n      timeZone: 'Asia/Kolkata'\n    }).replace(/,/g, ''));\n    const senderID = localStorage.getItem('sessionID'); // sender ID\n\n    if (!text.trim() && !file) {\n      alert(\"Please enter a message or select an image\");\n      return;\n    }\n\n    // const formData = new FormData();\n    // formData.append(\"text\", text);\n    // formData.append(\"timestamp\", timestamp);\n    // formData.append(\"senderID\", senderID);\n    // formData.append(\"groupID\", groupID);\n    // if (file) {\n    //   formData.append(\"file\", file);\n    // }\n\n    try {\n      let filename = null;\n      if (file) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const uploadResponse = await fetch('http://127.0.0.1:5000/upload', {\n          method: \"POST\",\n          body: formData\n        });\n        const uploadData = await uploadResponse.json();\n        if (!uploadData.success) {\n          console.error(\"ERROR:\", uploadData.message);\n          setText(\"\"); // Clear input field after sending\n          setFile(null); // Clear file input\n          return;\n        }\n        filename = uploadData.filename;\n      }\n      const sendResponse = await fetch('http://127.0.0.1:5000/send_text', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: text,\n          timestamp: timestamp,\n          senderID: senderID,\n          groupID: groupID,\n          filename: filename\n        })\n      });\n      const sendData = await sendResponse.json();\n      if (sendData.success) {\n        console.log(sendData); // Handle response from the backend as needed\n        setText(\"\"); // Clear input field after sending\n        setFile(null); // Clear file input\n        inputRef.current.value = null; // Clear file input\n      } else {\n        console.error(\"ERROR:\", sendData.message); // Log response from the backend\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type something...\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSend,\n        label: \"Send\",\n        icon: \"pi pi-send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"jxLzK7MIP7R8KMG61qf9TzNg+TA=\", false, function () {\n  return [useSelector];\n});\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","useRef","Button","useSelector","jsxDEV","_jsxDEV","Input","_s","text","setText","file","setFile","inputRef","groupID","state","formatDate","timestamp","date","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","handleFileChange","e","target","files","handleFileDelete","current","value","handleSend","toLocaleString","timeZone","replace","senderID","localStorage","getItem","trim","alert","filename","formData","FormData","append","uploadResponse","fetch","method","body","uploadData","json","success","console","error","message","sendResponse","headers","JSON","stringify","sendData","log","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","label","icon","_c","$RefreshReg$"],"sources":["C:/Users/mayur/OneDrive/Desktop/WEB PROJECT/Major Project/frontend/src/components/BotInput.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Button } from \"primereact/button\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Input = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const inputRef = useRef(null);\r\n  const groupID = useSelector((state) => state.groupID);\r\n\r\n  function formatDate(timestamp) {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const hours = date.getHours().toString().padStart(2, '0');\r\n    const minutes = date.getMinutes().toString().padStart(2, '0');\r\n    const seconds = date.getSeconds().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFileDelete = () => {\r\n    setFile(null);\r\n    inputRef.current.value = null;\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    const timestamp = formatDate(new Date().toLocaleString('en-US', { timeZone: 'Asia/Kolkata' }).replace(/,/g, ''));\r\n    const senderID = localStorage.getItem('sessionID'); // sender ID\r\n    \r\n    if (!text.trim() && !file) {\r\n      alert(\"Please enter a message or select an image\");\r\n      return;\r\n    }\r\n\r\n    // const formData = new FormData();\r\n    // formData.append(\"text\", text);\r\n    // formData.append(\"timestamp\", timestamp);\r\n    // formData.append(\"senderID\", senderID);\r\n    // formData.append(\"groupID\", groupID);\r\n    // if (file) {\r\n    //   formData.append(\"file\", file);\r\n    // }\r\n\r\n    try {\r\n      let filename = null;\r\n      if (file) {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        \r\n        const uploadResponse = await fetch('http://127.0.0.1:5000/upload', {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n        const uploadData = await uploadResponse.json();\r\n        if (!uploadData.success) {\r\n          console.error(\"ERROR:\", uploadData.message);\r\n          setText(\"\"); // Clear input field after sending\r\n          setFile(null); // Clear file input\r\n          return;\r\n        }\r\n        filename = uploadData.filename;\r\n      }\r\n\r\n      const sendResponse = await fetch('http://127.0.0.1:5000/send_text', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          text: text,\r\n          timestamp: timestamp,\r\n          senderID: senderID,\r\n          groupID: groupID,\r\n          filename: filename,\r\n        }),\r\n      });\r\n      const sendData = await sendResponse.json();\r\n      if (sendData.success) {\r\n        console.log(sendData); // Handle response from the backend as needed\r\n        setText(\"\"); // Clear input field after sending\r\n        setFile(null); // Clear file input\r\n        inputRef.current.value = null; // Clear file input\r\n      } else {\r\n        console.error(\"ERROR:\", sendData.message); // Log response from the backend\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type something...\"\r\n        onChange={(e) => setText(e.target.value)}\r\n        value={text}\r\n      />\r\n      <div className=\"send\">\r\n        <Button onClick={handleSend} label=\"Send\" icon=\"pi pi-send\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}