{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur\\\\OneDrive\\\\Desktop\\\\WEB PROJECT\\\\Major Project\\\\frontend\\\\src\\\\components\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const groupID = useSelector(state => state.groupID);\n  const [messages, setMessages] = useState([]);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const socket = io(\"http://127.0.0.1:5000\");\n    socket.on(\"message\", data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setMessages([]); // Clear messages before fetching new messages\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/get_messages\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            groupID: groupID\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          setMessages(data.messages);\n        } else {\n          console.error(\"ERROR:\", data.message);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMessages();\n  }, [groupID]);\n\n  // useEffect(() => {\n  //   if (messagesEndRef.current) {\n  //     messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  //   }\n  // }, [messages]);\n\n  useEffect(() => {\n    // Scroll to bottom after a small delay when messages are loaded\n    const timer = setTimeout(() => {\n      if (messagesEndRef.current) {\n        messagesEndRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\"\n        });\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-messages\",\n      children: \"No conversation yet to display!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n      message: message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"dBk5laYPmEr0vZnIuhcIhCCWR3I=\", false, function () {\n  return [useSelector];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useSelector","io","Message","jsxDEV","_jsxDEV","Messages","_s","groupID","state","messages","setMessages","messagesEndRef","socket","on","data","prevMessages","disconnect","fetchMessages","response","fetch","method","headers","body","JSON","stringify","json","success","console","error","message","timer","setTimeout","current","scrollIntoView","behavior","block","clearTimeout","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","index","ref","_c","$RefreshReg$"],"sources":["C:/Users/mayur/OneDrive/Desktop/WEB PROJECT/Major Project/frontend/src/components/Messages.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport Message from \"./Message\";\r\n\r\nconst Messages = () => {\r\n  const groupID = useSelector((state) => state.groupID);\r\n  const [messages, setMessages] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n\r\n  useEffect(() => {\r\n    const socket = io(\"http://127.0.0.1:5000\");\r\n    socket.on(\"message\", (data) => {\r\n      setMessages((prevMessages) => [...prevMessages, data]);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      setMessages([]); // Clear messages before fetching new messages\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:5000/get_messages\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            groupID: groupID,\r\n          }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setMessages(data.messages);\r\n        } else {\r\n          console.error(\"ERROR:\", data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [groupID]);\r\n\r\n  // useEffect(() => {\r\n  //   if (messagesEndRef.current) {\r\n  //     messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  //   }\r\n  // }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Scroll to bottom after a small delay when messages are loaded\r\n    const timer = setTimeout(() => {\r\n      if (messagesEndRef.current) {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n      }\r\n    }, 100);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      {messages.length === 0 ? (\r\n        <div className=\"no-messages\">No conversation yet to display!!</div>\r\n      ) : (\r\n        messages.map((message, index) => (\r\n          <Message key={index} message={message} />\r\n        ))\r\n      )}\r\n        <div ref={messagesEndRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}