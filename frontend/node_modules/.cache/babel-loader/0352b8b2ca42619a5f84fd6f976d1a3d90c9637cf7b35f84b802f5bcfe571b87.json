{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur\\\\OneDrive\\\\Desktop\\\\WEB PROJECT\\\\Major Project\\\\frontend\\\\src\\\\components\\\\BotMessages.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Message from \"./Message\";\nimport { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold } from \"@google/generative-ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotMessages = () => {\n  _s();\n  const groupID = useSelector(state => state.groupID);\n  const [messages, setMessages] = useState([]);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const runChat = async () => {\n      const API_KEY = \"YOUR_API_KEY\";\n      const MODEL_NAME = \"gemini-1.5-pro-latest\";\n      const genAI = new GoogleGenerativeAI(API_KEY);\n      const model = genAI.getGenerativeModel({\n        model: MODEL_NAME\n      });\n      const generationConfig = {\n        temperature: 1,\n        topK: 0,\n        topP: 0.95,\n        maxOutputTokens: 8192\n      };\n      const safetySettings = [{\n        category: HarmCategory.HARM_CATEGORY_HARASSMENT,\n        threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n      }, {\n        category: HarmCategory.HARM_CATEGORY_HATE_SPEECH,\n        threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n      }, {\n        category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,\n        threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n      }, {\n        category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\n        threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n      }];\n      const chat = model.startChat({\n        generationConfig,\n        safetySettings,\n        history: [{\n          role: \"user\",\n          parts: [{\n            text: \"heyy\"\n          }]\n        }, {\n          role: \"model\",\n          parts: [{\n            text: \"Hey! ðŸ‘‹  What's up? ðŸ˜Š\"\n          }]\n        }]\n      });\n      const result = await chat.sendMessage(\"YOUR_USER_INPUT\");\n      const response = result.response;\n      console.log(response.text());\n    };\n    runChat();\n  }, []);\n  useEffect(() => {\n    // Scroll to bottom after a small delay when messages are loaded\n    const timer = setTimeout(() => {\n      if (messagesEndRef.current) {\n        messagesEndRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\"\n        });\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-messages\",\n      children: \"Start the conversation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n      message: message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(BotMessages, \"ZOYCCHUHoO9CDvc9D3UyyXz4Vkg=\", false, function () {\n  return [useSelector];\n});\n_c = BotMessages;\nexport default BotMessages;\nvar _c;\n$RefreshReg$(_c, \"BotMessages\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useSelector","Message","GoogleGenerativeAI","HarmCategory","HarmBlockThreshold","jsxDEV","_jsxDEV","BotMessages","_s","groupID","state","messages","setMessages","messagesEndRef","runChat","API_KEY","MODEL_NAME","genAI","model","getGenerativeModel","generationConfig","temperature","topK","topP","maxOutputTokens","safetySettings","category","HARM_CATEGORY_HARASSMENT","threshold","BLOCK_MEDIUM_AND_ABOVE","HARM_CATEGORY_HATE_SPEECH","HARM_CATEGORY_SEXUALLY_EXPLICIT","HARM_CATEGORY_DANGEROUS_CONTENT","chat","startChat","history","role","parts","text","result","sendMessage","response","console","log","timer","setTimeout","current","scrollIntoView","behavior","block","clearTimeout","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","ref","_c","$RefreshReg$"],"sources":["C:/Users/mayur/OneDrive/Desktop/WEB PROJECT/Major Project/frontend/src/components/BotMessages.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Message from \"./Message\";\r\nimport { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold } from \"@google/generative-ai\";\r\n\r\nconst BotMessages = () => {\r\n  const groupID = useSelector((state) => state.groupID);\r\n  const [messages, setMessages] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n\r\n\r\n  useEffect(() => {\r\n    const runChat = async () => {\r\n      const API_KEY = \"YOUR_API_KEY\";\r\n      const MODEL_NAME = \"gemini-1.5-pro-latest\";\r\n\r\n      const genAI = new GoogleGenerativeAI(API_KEY);\r\n      const model = genAI.getGenerativeModel({ model: MODEL_NAME });\r\n\r\n      const generationConfig = {\r\n        temperature: 1,\r\n        topK: 0,\r\n        topP: 0.95,\r\n        maxOutputTokens: 8192,\r\n      };\r\n\r\n      const safetySettings = [\r\n        {\r\n          category: HarmCategory.HARM_CATEGORY_HARASSMENT,\r\n          threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\r\n        },\r\n        {\r\n          category: HarmCategory.HARM_CATEGORY_HATE_SPEECH,\r\n          threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\r\n        },\r\n        {\r\n          category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,\r\n          threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\r\n        },\r\n        {\r\n          category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\r\n          threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\r\n        },\r\n      ];\r\n\r\n      const chat = model.startChat({\r\n        generationConfig,\r\n        safetySettings,\r\n        history: [\r\n          {\r\n            role: \"user\",\r\n            parts: [{ text: \"heyy\"}],\r\n          },\r\n          {\r\n            role: \"model\",\r\n            parts: [{ text: \"Hey! ðŸ‘‹  What's up? ðŸ˜Š\"}],\r\n          },\r\n        ],\r\n      });\r\n\r\n      const result = await chat.sendMessage(\"YOUR_USER_INPUT\");\r\n      const response = result.response;\r\n      console.log(response.text());\r\n    }\r\n\r\n    runChat();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    // Scroll to bottom after a small delay when messages are loaded\r\n    const timer = setTimeout(() => {\r\n      if (messagesEndRef.current) {\r\n        messagesEndRef.current.scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"end\",\r\n        });\r\n      }\r\n    }, 100);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      {messages.length === 0 ? (\r\n        <div className=\"no-messages\">Start the conversation!</div>\r\n      ) : (\r\n        messages.map((message, index) => (\r\n          <Message key={index} message={message} />\r\n        ))\r\n      )}\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BotMessages;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}